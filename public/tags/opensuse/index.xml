<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opensuse on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/opensuse/</link>
    <description>Recent content in Opensuse on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 05 Apr 2015 02:27:00 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/opensuse/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MediaTomb &#43; VLC</title>
      <link>https://www.zfanw.com/blog/mediatomb-with-vlc.html</link>
      <pubDate>Sun, 05 Apr 2015 02:27:00 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/mediatomb-with-vlc.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_MediaTomb&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 安装 MediaTomb&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_MediaTomb-2&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 运行 MediaTomb&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_VLC&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 安装 VLC&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#TODO&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;4&lt;/span&gt; TODO&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;5&lt;/span&gt; 备注&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    前阵子让 ThinkPad 退休，换了 MacBook Pro，于是 ThinkPad 就闲置一边，无所事事。今天突然想到，我手上设备也有多台了，不如把 ThinkPad 搞成媒体服务器，专门用于存储 AV(audio/video)，然后其它设备通过客户端读取。
  &lt;/p&gt;
  
  &lt;p&gt;
    试验是在 MacBook + ThinkPad 上进行的，涉及的软件有：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://mediatomb.cc/&#34;&gt;MediaTomb&lt;/a&gt; &amp;#8211; &lt;a href=&#34;http://en.wikipedia.org/wiki/List_of_UPnP_AV_media_servers_and_clients#UPnP_AV_media_servers&#34; title=&#34;维基百科 UPnP 服务器列表&#34;&gt;UPnP 媒体服务器&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://www.videolan.org/vlc/download-macosx.html&#34;&gt;VLC for Mac OSX&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    环境：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      ThinkPad &amp;#8211; openSUSE 13.2 64 bits
    &lt;/li&gt;
    &lt;li&gt;
      MacBook &amp;#8211; OSX Yosimite 10.10.2
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    &lt;strong&gt;注意&lt;/strong&gt;：如果有使用 vpn、代理等等，请暂时关闭；有防火墙的也暂时关闭。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_MediaTomb&#34;&gt;安装 MediaTomb&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_MediaTomb&#34; href=&#34;#_MediaTomb&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;
        在 openSUSE 终端窗口执行以下命令：
      &lt;/p&gt;
      
      &lt;pre&gt;&lt;code&gt;sudo zypper ar -f http://packman.inode.at/suse/openSUSE_13.2/ packman
&lt;/code&gt;&lt;/pre&gt;
      
      &lt;p&gt;
        这一步添加 packman 库。
      &lt;/p&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;p&gt;
        刷新软件库的源
      &lt;/p&gt;
      
      &lt;pre&gt;&lt;code&gt;sudo zypper ref
&lt;/code&gt;&lt;/pre&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;p&gt;
        安装 MediaTomb
      &lt;/p&gt;
      
      &lt;pre&gt;&lt;code&gt;sudo zypper in mediatomb
&lt;/code&gt;&lt;/pre&gt;
      
      &lt;p&gt;
        这样，我们就在 openSUSE 上装好 MediaTomb 了。
      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_MediaTomb-2&#34;&gt;运行 MediaTomb&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_MediaTomb-2&#34; href=&#34;#_MediaTomb-2&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    第二步，我们要在 openSUSE 上启动 MediaTomb。
  &lt;/p&gt;
  
  &lt;p&gt;
    打开终端窗口，执行命令：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;mediatomb
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    MediaTomb 会绑定一个 ip:port，比如 10.10.10.35:49152 这样。但这个网址我们的其它设备是无法访问的，所以我们需要修改它。
  &lt;/p&gt;
  
  &lt;p&gt;
    假设路由分配给 openSUSE 系统的 ip 地址是 192.168.0.104。我们在启动 mediatomb 时传递一个 &lt;a href=&#34;http://mediatomb.cc/pages/documentation#id2855871&#34;&gt;ip 参数&lt;/a&gt;给它：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;mediatomb --ip 192.168.0.104
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    等它启动后，我们就可以通过这个 ip:port 访问它的 web UI 界面 &amp;#8211; 这是一个可视化管理界面，可以添加视频文件、文件夹等，省得我们再去跟命令行打交道，截图如下：
  &lt;/p&gt;
  
  &lt;p&gt;
    [resp_image id=&amp;#8217;15265&amp;#8242; caption=&amp;#8221; ]
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_VLC&#34;&gt;安装 VLC&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_VLC&#34; href=&#34;#_VLC&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    从 &lt;a href=&#34;http://www.videolan.org/vlc/download-macosx.html&#34;&gt;VLC 官网&lt;/a&gt; 下载安装 VLC，然后打开 VLC，如下图：
  &lt;/p&gt;
  
  &lt;p&gt;
    [resp_image id=&amp;#8217;15266&amp;#8242; caption=&amp;#8221; ]
  &lt;/p&gt;
  
  &lt;p&gt;
    双击视频就可以打开，拖动也非常流畅：
  &lt;/p&gt;
  
  &lt;p&gt;
    [resp_image id=&amp;#8217;15267&amp;#8242; caption=&amp;#8221; ]
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;TODO&#34;&gt;TODO&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyTODO&#34; href=&#34;#TODO&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;input type=&#34;checkbox&#34; disabled /&gt; openSUSE 系统绑定静态 ip，不要每次 ip 都在变
    &lt;/li&gt;
    &lt;li&gt;
      &lt;input type=&#34;checkbox&#34; disabled /&gt; MediaTomb 随 openSUSE 系统启动，后台运行，不要每次都手动开启
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;
        &lt;input type=&#34;checkbox&#34; checked disabled /&gt; 看看 iOS 又如何连接
      &lt;/p&gt;
      
      &lt;p&gt;
        在 iOS 上安装 VLC 即可，VLC 会自动发现局域网内的 UPnP 服务器。
      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;备注&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      MediaTomb 很久不更新了，&lt;a href=&#34;http://mediatomb.cc/changelog.txt&#34;&gt;最新一个版本 v0.12.1 是在 2010.08.04 发布&lt;/a&gt;，所以请自行斟酌是否继续使用。以我目前的使用情况看，暂时没发现什么问题。
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>WordPress 图片上传问题</title>
      <link>https://www.zfanw.com/blog/wordpress-upload-image-problem.html</link>
      <pubDate>Wed, 05 Nov 2014 11:24:34 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/wordpress-upload-image-problem.html</guid>
      <description>&lt;p&gt;博客从虚拟主机迁到 VPS 后，开始水土不服，曝各种问题 &amp;#8211; 当然，水土不服是屁话，WordPress 运行环境不一样，各种配置需要做调整才是真的。&lt;/p&gt;

&lt;p&gt;比如这 WordPress 后台上传图片的问题：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are no HTTP transports available which can complete the requested request.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有人说是缺少 &lt;em&gt;php5-curl&lt;/em&gt; 模块的缘故，我服务器系统跑的是 openSUSE 13.1 64位，检查 &lt;em&gt;php5-curl&lt;/em&gt; 的情况：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zypper info php5-curl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出结果如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Information for package php5-curl:
----------------------------------
Repository: openSUSE-13.1-Update
Name: php5-curl
Version: 5.4.20-30.1
Arch: i586
Vendor: openSUSE
Installed: No
Status: not installed
Installed Size: 70.2 KiB
Summary: PHP5 Extension Module
Description: 
PHP interface to libcurl that allows you to connect to and communicate
with servers of many different types, using protocols of many different
types.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;请注意 &lt;strong&gt;Installed: No&lt;/strong&gt;，确实未曾安装。&lt;/p&gt;

&lt;p&gt;且安装一下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zypper install php5-curl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重启服务器上的 Apache：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /usr/sbin/rcapache2 restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后图片就可以上传，不再报错。有些人说要改 php.ini 文件配置，我的情况则不需要。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何安装使用 Apache mod_deflate 模块</title>
      <link>https://www.zfanw.com/blog/apache-mod_deflate.html</link>
      <pubDate>Fri, 31 Oct 2014 14:20:58 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/apache-mod_deflate.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 安装&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-2&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 启用&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-3&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 配置&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    最近把博客从虚拟主机搬到 VPS 上，自然一番折腾。估计围绕这一过程，写三四篇博客不是梦。
  &lt;/p&gt;
  
  &lt;p&gt;
    这是第一篇，服务器端的压缩功能 &amp;#8211; 服务器在返回内容前先对内容做 gzip 压缩，以减小传输的文件大小 &amp;#8211; 照 &lt;a href=&#34;https://developers.google.com/speed/docs/insights/EnableCompression&#34;&gt;Google 的说法&lt;/a&gt;，能减小 90%，但这也不是重点，重点是服务器端不开启 gzip 压缩的话，Google PageSpeed 的测试就会&lt;a href=&#34;https://developers.google.com/speed/pagespeed/insights/?url=http://www.zfanw.com/blog/&amp;tab=desktop&#34;&gt;扣分&lt;/a&gt; &amp;#8211; 我个人特别在意这个分数。
  &lt;/p&gt;
  
  &lt;p&gt;
    Apache 下，压缩功能由 &lt;a href=&#34;http://httpd.apache.org/docs/2.4/mod/mod_deflate.html&#34;&gt;mod_deflate&lt;/a&gt; 模块控制。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;安装&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    我的 VPS 系统装的是 openSUSE 13.1 64 位系统，Apache 版本为 2.4。首先查看下系统中是否已经安装 &lt;em&gt;mod_deflate&lt;/em&gt;模块，我知道的有两种方法：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;
        当前用户下 执行命令 &lt;code&gt;httpd2 -M&lt;/code&gt;，输出的内容大致如下：
      &lt;/p&gt;
      
      &lt;pre&gt;&lt;code&gt;chenxsan@zfanw.com:~&amp;gt; httpd2 -M
[Fri Oct 31 13:13:59.278203 2014] [so:warn] [pid 9292] AH01574: module deflate_module is already loaded, skipping
Loaded Modules:
core_module (static)
access_compat_module (static)
so_module (static)
http_module (static)
mpm_prefork_module (static)
unixd_module (static)
systemd_module (static)
actions_module (shared)
alias_module (shared)
auth_basic_module (shared)
authn_file_module (shared)
authz_host_module (shared)
authz_groupfile_module (shared)
authz_user_module (shared)
autoindex_module (shared)
cgi_module (shared)
dir_module (shared)
env_module (shared)
expires_module (shared)
include_module (shared)
log_config_module (shared)
mime_module (shared)
negotiation_module (shared)
setenvif_module (shared)
ssl_module (shared)
userdir_module (shared)
reqtimeout_module (shared)
authn_core_module (shared)
authz_core_module (shared)
php5_module (shared)
rewrite_module (shared)
deflate_module (shared)
&lt;/code&gt;&lt;/pre&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;p&gt;
        查看 &lt;em&gt;/etc/sysconfig/apache2&lt;/em&gt; 文件内容，可以直接打开文件，也可以使用 &lt;code&gt;grep&lt;/code&gt; 命令：
      &lt;/p&gt;
      
      &lt;pre&gt;&lt;code&gt;grep &#34;APACHE_MODULES=&#34; /etc/sysconfig/apache2
&lt;/code&gt;&lt;/pre&gt;
      
      &lt;p&gt;
        得出的结果大致如下：
      &lt;/p&gt;
      
      &lt;blockquote&gt;
        &lt;p&gt;
          APACHE_MODULES=&amp;#8221;actions alias auth_basic authn_file authz_host authz_groupfile authz_user autoindex cgi dir env expires include log_config mime negotiation setenvif ssl userdir reqtimeout authn_core authz_core mod-userdir php5 mod_rewrite mod_deflate deflate&amp;#8221;
        &lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    我这里显示的结果是已经安装加载了 &lt;em&gt;mod_deflate&lt;/em&gt; 模块。
  &lt;/p&gt;
  
  &lt;p&gt;
    假如没有，则使用 &lt;a href=&#34;http://man.he.net/man8/a2enmod&#34;&gt;&lt;code&gt;a2enmod&lt;/code&gt;&lt;/a&gt; 来启用：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo a2enmod deflate
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    等等，为什么没说安装直接进入启用阶段？因为 &lt;em&gt;mod_deflate&lt;/em&gt; 模块在安装 Apache 时已经捎带装上，所以可以跳过安装这个步骤。
  &lt;/p&gt;
  
  &lt;p&gt;
    启用 &lt;em&gt;mod_deflate&lt;/em&gt; 模块后，需要&lt;a href=&#34;https://activedoc.opensuse.org/book/opensuse-reference/chapter-20-the-apache-http-server#sec.apache2.start_stop&#34;&gt;重启 Apache 服务器&lt;/a&gt;：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo rcapache2 restart
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-2&#34;&gt;启用&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-2&#34; href=&#34;#i-2&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    如上所述。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-3&#34;&gt;配置&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-3&#34; href=&#34;#i-3&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    启用 &lt;em&gt;mod_deflate&lt;/em&gt; 模块后，就可以开始配置了。
  &lt;/p&gt;
  
  &lt;p&gt;
    可以照 openSUSE 的&lt;a href=&#34;https://en.opensuse.org/SDB:Linux_Apache_MySQL_PHP#mod_deflate&#34;&gt;操作说明&lt;/a&gt;一步步来，也可以粗野直接点，修改 &lt;em&gt;/etc/apache2/httpd.conf&lt;/em&gt; 文件，在文件末加入如下代码：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;SetOutputFilter DEFLATE
SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ \
    no-gzip dont-vary
SetEnvIfNoCase Request_URI \
    \.(?:exe|t?gz|zip|bz2|sit|rar|7z)$ \
    no-gzip dont-vary
SetEnvIfNoCase Request_URI \.pdf$ no-gzip dont-vary

BrowserMatch ^Mozilla/4 gzip-only-text/html
BrowserMatch ^Mozilla/4\.0[678] no-gzip
BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    或者可以考虑 h5bp 提供的&lt;a href=&#34;https://github.com/h5bp/server-configs-apache/blob/master/src/web_performance/compression.conf&#34;&gt;配置&lt;/a&gt;。
  &lt;/p&gt;
  
  &lt;p&gt;
    然后重启 Apache：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo rcapache2 restart
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    再跑一趟 PageSpeed，就不会再提服务器压缩的事 &amp;#8211; 恭喜，你已经压缩掉 90% 的传输文件大小，为用户节省大量带宽与时间。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Linode 下 openSUSE 系统 FQDN 设置</title>
      <link>https://www.zfanw.com/blog/linode-opensuse-fully-qualified-domain-name.html</link>
      <pubDate>Fri, 24 Oct 2014 12:54:59 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/linode-opensuse-fully-qualified-domain-name.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_hostname&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 设置 hostname&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_FQDN&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 设置 FQDN&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    Ubuntu 的势力已经大到超出我想象，所以 &lt;a href=&#34;https://www.linode.com/docs/getting-started#update-etchosts&#34;&gt;Linode 教程&lt;/a&gt;中没有提及 openSUSE 下的情况也就没觉得奇怪。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_hostname&#34;&gt;设置 hostname&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_hostname&#34; href=&#34;#_hostname&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    其实我也好奇，为什么 VPS 需要设置 hostname。估计是为了好看，或者可移植性。譬如未设置前，&lt;code&gt;hostname -v&lt;/code&gt; 显示的是 li-memeberxxx 之类的，设置后，主机名显得个性化了，另外换服务器的话，主机名不会变化 &amp;#8211; 这只是我的揣测。
  &lt;/p&gt;
  
  &lt;p&gt;
    openSUSE 下设置 hostname，跟 linode 教程中的 Ubuntu 部分略近：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;code&gt;sudo vi /etc/hostname&lt;/code&gt; &amp;#8211; 创建一个 hostname 文件，在其中输入 &lt;code&gt;orchid&lt;/code&gt;，这个名称随你写，你爱什么写什么
    &lt;/li&gt;
    &lt;li&gt;
      &lt;code&gt;hostname -F /etc/hostname&lt;/code&gt; &amp;#8211; 设定 hostname，名称为 /etc/hostname 文件内容
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    再查看 &lt;code&gt;hostname -v&lt;/code&gt; 结果，已经变成 &lt;code&gt;orchid&lt;/code&gt;。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_FQDN&#34;&gt;设置 FQDN&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_FQDN&#34; href=&#34;#_FQDN&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://en.wikipedia.org/wiki/Fully_qualified_domain_name&#34;&gt;FQDN&lt;/a&gt; 的全称是 &amp;#8220;fully qualified domain name&amp;#8221;，为什么要设置它？又是一个诡异的问题。且不管它。
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;code&gt;sudo vi /etc/hosts&lt;/code&gt; 打开 hosts 文件，添加一行：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;12.34.56.78 orchid.zfanw.com orchid
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    第一部分即你的服务器 IP 地址，第二部分即是 FQDN 了，第三部分是前面设置的 hostname。
  &lt;/p&gt;
  
  &lt;p&gt;
    注意，&lt;code&gt;orchid.zfanw.com&lt;/code&gt; 需要做域名解析，A 记录绑定到服务器 IP &amp;#8211; 这样主机外部访问时就可以解析到。
  &lt;/p&gt;
  
  &lt;p&gt;
    之后再执行 &lt;code&gt;hostname -f&lt;/code&gt; 查看 FQDN 值，输出的是：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;orchid.zfanw.com
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    有时会需要重启 Apache 服务，则执行如下命令：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo rcapache2 restart
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    最后，当然是贴一下我的&lt;a href=&#34;https://www.linode.com/?r=c1160d4e51485f11b9ae6b4cf286ebf455f87613&#34;&gt;推广链接&lt;/a&gt;。我不太记得好处是什么，大致是你从这链接点击注册使用 3 个月以上，我得到一定的返现，这返现足够我吃十顿快餐吧。
  &lt;/p&gt;
  
  &lt;p&gt;
    附：&lt;a href=&#34;http://www.zfanw.com/blog/linode-fqdn-hostname.html&#34;&gt;Linode FQDN 设置 – 陈三&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ERROR: Failed to build gem native extension</title>
      <link>https://www.zfanw.com/blog/error-failed-to-build-gem-native-extension.html</link>
      <pubDate>Mon, 25 Nov 2013 22:05:44 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/error-failed-to-build-gem-native-extension.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://rubyonrails.org/download&#34;&gt;Ruby on Rails&lt;/a&gt; 网站上说，安装好 Ruby 后运行 &lt;code&gt;gem install rails&lt;/code&gt; 就好了。&lt;/p&gt;

&lt;p&gt;但整个过程折腾了我好几个小时。首先，openSUSE 13.1 自带有 Ruby 2.0.0p-247，我因为打算用 rbenv 管理 Ruby，就草率地把 Ruby 卸载：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo zypper rm ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果 Konsole 没了，YAST 没了，似乎连着 KDE 桌面都被卸掉。&lt;/p&gt;

&lt;p&gt;那么就先将就用系统自带的吧。但 &lt;code&gt;gem install rails&lt;/code&gt; 报错了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Building native extensions. This could take a while&amp;#8230;&lt;/p&gt;

&lt;p&gt;ERROR: Error installing rails:&lt;/p&gt;

&lt;p&gt;ERROR: Failed to build gem native extension.&lt;/p&gt;

&lt;p&gt;/usr/bin/ruby2.0 extconf.rb&lt;/p&gt;

&lt;p&gt;mkmf.rb can&amp;#8217;t find header files for ruby at /usr/lib/ruby/include/ruby.h&lt;/p&gt;

&lt;p&gt;Gem files will remain installed in /usr/lib/ruby/gems/2.0.0/gems/atomic-1.1.14 for inspection.&lt;/p&gt;

&lt;p&gt;Results logged to /usr/lib/ruby/gems/2.0.0/gems/atomic-1.1.14/ext/gem_make.out&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;gem install compass&lt;/code&gt; 却是没有任何问题。&lt;/p&gt;

&lt;p&gt;网上的资料说要安装 ruby-devel：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zypper in ruby-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再次安装 Rails，如你所见，从我开始写这篇到现在，还在安装中。但后来总算安装完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Ruby openssl extension was not compiled. Missing the OpenSSL lib?</title>
      <link>https://www.zfanw.com/blog/the-ruby-openssl-extension-was-not-compiled-missing-the-openssl-lib.html</link>
      <pubDate>Sun, 24 Nov 2013 11:47:50 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/the-ruby-openssl-extension-was-not-compiled-missing-the-openssl-lib.html</guid>
      <description>&lt;p&gt;我试图通过 &lt;a href=&#34;https://github.com/sstephenson/rbenv&#34;&gt;rbenv&lt;/a&gt; 安装 Ruby，但失败了，错误如标题所示。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sstephenson/ruby-build/issues/377&#34;&gt;Ruby-build&lt;/a&gt; 上有人报告类似的错误，作者也在 wiki 上给出相应的&lt;a href=&#34;https://github.com/sstephenson/ruby-build/wiki#suggested-build-environment&#34;&gt;环境要求&lt;/a&gt;说明。但里面并没有提到 openSUSE 系统。&lt;/p&gt;

&lt;p&gt;依他们的思路，我查找了 openSUSE 下的相应 openssl 包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ zypper se openssl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到的有 libopenssl-devel 等，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo zypper in libopenssl-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后再通过 rbenv 安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rben install 2.0.0-p353
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Installed ruby-2.0.0-p353 to /home/sam/.rbenv/versions/2.0.0-p353&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不再报错，成功安装 Ruby 2.0.0-p353。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 上的 infinality</title>
      <link>https://www.zfanw.com/blog/opensuse-infinality.html</link>
      <pubDate>Fri, 22 Nov 2013 13:57:23 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/opensuse-infinality.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_FreeType&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 下载 FreeType&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_freetype-infinality&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 下载 freetype-infinality&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_freetype&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 给 freetype 文件打补丁&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_fontconfig-infinality&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;4&lt;/span&gt; 下载 fontconfig-infinality&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;5&lt;/span&gt; 问题汇&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    &lt;strong&gt;简快版&lt;/strong&gt;，仅需要三步：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      安装 &lt;a href=&#34;https://build.opensuse.org/package/show/home:opensuse_zh/freetype2&#34;&gt;freetype2&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      安装 &lt;a href=&#34;https://software.opensuse.org/package/fontconfig-infinality?search_term=fontconfig-infinality&#34;&gt;fontconfig infinality&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;code&gt;cd /etc/fonts/infinality&lt;/code&gt;，执行 &lt;code&gt;./infctl.sh setstyle&lt;/code&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    以前用 Ubuntu 时，在系统上折腾过 &lt;a href=&#34;http://www.zfanw.com/blog/ubuntu-font-render-with-infinality.html&#34;&gt;infinality&lt;/a&gt;，字体渲染的效果要比系统默认的好很多。最近&lt;a href=&#34;http://www.zfanw.com/blog/opensuse-upgrade-12-3-to-13-1.html&#34;&gt;升级 openSUSE 到13.1&lt;/a&gt;，感觉字体太细，看得不很舒服，就想起 infinality。
  &lt;/p&gt;
  
  &lt;p&gt;
    opensuse_zh 中文源上有提供 &lt;a href=&#34;https://build.opensuse.org/package/show/home:opensuse_zh/freetype2&#34;&gt;freetype2&lt;/a&gt;，不过我看它13.1版本下的 build 状态是 failed，所以没有尝试。所以最后仍是根据官网上的&lt;a href=&#34;http://www.infinality.net/forum/viewtopic.php?f=2&amp;t=77&#34;&gt;说明&lt;/a&gt;配置的。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_FreeType&#34;&gt;下载 FreeType&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_FreeType&#34; href=&#34;#_FreeType&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    从 FreeType 官网下载 &lt;a href=&#34;http://download.savannah.gnu.org/releases/freetype/&#34;&gt;freetype 2.4.12&lt;/a&gt;。FreeType 现在已经出到2.5版本，但出于安全考虑，还是照作者说的做，下载2.4.12版本。
  &lt;/p&gt;
  
  &lt;p&gt;
    我在 /home/sam/ 目录下建了个 fonts 目录，将 freetype 压缩包解压到 fonts 目录里。
  &lt;/p&gt;
  
  &lt;p&gt;
    现在的 fonts 目录结构如下：
  &lt;/p&gt;
  
  &lt;blockquote&gt;
    &lt;p&gt;
      &amp;#45; fonts
    &lt;/p&gt;
    
    &lt;p&gt;
      ++ freetype-2.4.12
    &lt;/p&gt;
  &lt;/blockquote&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_freetype-infinality&#34;&gt;下载 freetype-infinality&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_freetype-infinality&#34; href=&#34;#_freetype-infinality&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    从 infinality &lt;a href=&#34;http://www.infinality.net/blog/infinality-freetype-patches/&#34;&gt;页面&lt;/a&gt; 下载 freetype-infinality-2.4.12-20130514_01-x86_64.tar.bz2 文件，同样解压到 fonts 目录下，fonts 目录结构现在如下：
  &lt;/p&gt;
  
  &lt;blockquote&gt;
    &lt;p&gt;
      &amp;#45; fonts
    &lt;/p&gt;
    
    &lt;p&gt;
      &amp;#43;+ freetype-2.4.12
    &lt;/p&gt;
    
    &lt;p&gt;
      &amp;#43;+ freetype-infinality-2.4.12-20130514_01-x86_64
    &lt;/p&gt;
  &lt;/blockquote&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_freetype&#34;&gt;给 freetype 文件打补丁&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_freetype&#34; href=&#34;#_freetype&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;pre&gt;&lt;code&gt;$ cd /home/sam/fonts/freetype-2.4.12

$ patch -p1 &amp;lt; ../freetype-infinality-2.4.12-20130514_01-x86_64/freetype-entire-infinality-patchset-20130514-01.patch
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    接下来是 make(以下命令全部来自 infinality 说明)：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;$ ./configure

$ make

$ sudo mkdir /usr/lib/freetype-infinality/ #64位系统上把 lib 改成 lib64

$ sudo find . -name libfreetype.so.6.10.1 -exec mv {} /usr/lib/freetype-infinality/  \;       

$ cd /usr/lib/freetype-infinality

$ sudo ln -s libfreetype.so.6.10.1 libfreetype.so.10
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    我的系统下，在 &lt;code&gt;./configure&lt;/code&gt; 一步就报错：
  &lt;/p&gt;
  
  &lt;blockquote&gt;
    &lt;p&gt;
      configure: error: no acceptable C compiler found in $PATH
    &lt;/p&gt;
    
    &lt;p&gt;
      See &amp;#8216;config.log&amp;#8217; for more details
    &lt;/p&gt;
  &lt;/blockquote&gt;
  
  &lt;p&gt;
    不过很可惜，我在该目录下并没找到 config.log 文件。照错误的字面意思，大概是说通过 $PATH 没能找到可用的 C compiler。
  &lt;/p&gt;
  
  &lt;p&gt;
    看了些资料，说要安装下 &lt;a href=&#34;http://software.opensuse.org/package/gcc&#34;&gt;GCC&lt;/a&gt;。
  &lt;/p&gt;
  
  &lt;p&gt;
    安装完 GCC 后再跑一趟 &lt;code&gt;./configure&lt;/code&gt;，这回正常，之后 &lt;code&gt;make&lt;/code&gt;。
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;code&gt;find&lt;/code&gt; 一句的意思是，在当前目录，查找名称为 libfreetype.so.6.10.1 的文件，然后将它们移动到 /usr/lib/freetype-infinality/ 目录。&lt;code&gt;{}&lt;/code&gt; 类似占位符，&lt;a href=&#34;http://en.wikipedia.org/wiki/Find#Search_files_by_name_and_size&#34;&gt;find&lt;/a&gt; 命令会将找到的文件代入其中，&lt;code&gt;;&lt;/code&gt; 指示命令结束，之所以加转义符号 \ 是防止 Bash 把它理解成命令分隔符。
  &lt;/p&gt;
  
  &lt;p&gt;
    在完成以上操作后，我们可以切换到 /usr/lib/freetype-infinality 目录查看，现在有一个 libfreetype.so.6.10.1 文件 &amp;#8211; 是的，以上所有的操作是仅为了这个文件的。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_fontconfig-infinality&#34;&gt;下载 fontconfig-infinality&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_fontconfig-infinality&#34; href=&#34;#_fontconfig-infinality&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    仍是从 &lt;a href=&#34;http://www.infinality.net/blog/infinality-freetype-patches/&#34;&gt;infinality 网站&lt;/a&gt; 下载 fontconfig-infinality-1-20130104_1.tar.bz2，这回是解压到 /etc/fonts/ 目录下：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;$ sudo tar jfxv fontconfig-infinality-1-20130104_1.tar.bz2 -C /etc/fonts/
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    /etc/fonts/ 目录下共多出三个文件夹：
  &lt;/p&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      conf.avail
    &lt;/li&gt;
    &lt;li&gt;
      conf.d
    &lt;/li&gt;
    &lt;li&gt;
      infinality
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;p&gt;
    根据 /etc/fonts/infinality/README 文件说明，需要确保 /etc/fonts/conf.d 目录下的 52-infinality.conf 有软链接(symlink)指向 /etc/fonts/infinality/ 下的 infinality.conf：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;$ cd /etc/fonts/conf.d/
$ sudo ln -sf ../infinality/infinality.conf 52-infinality.conf
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    infinality 的配置说明提到 /home/用户名 目录下的 .fonts.conf 文件，不过我的系统上又没有。于是我就创建一个：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;$ cd /home/sam/
$ su #以 root 身份
$ vim .fonts.conf
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    在 .fonts.conf 文件中添加如下内容：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#39;1.0&#39;?&amp;gt;
&amp;lt;!DOCTYPE fontconfig SYSTEM &#39;fonts.dtd&#39;&amp;gt;
&amp;lt;fontconfig&amp;gt;
&amp;lt;/fontconfig&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    保存后执行 &lt;code&gt;chattr +i .fonts.conf&lt;/code&gt; 命令，使得 .fonts.conf 不受更改或破坏。
  &lt;/p&gt;
  
  &lt;p&gt;
    然后添加以下内容到 /etc/X11/Xresources 及 ~/.Xresources(不存在的话创建一个) 文件里：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;Xft.autohint: 0
Xft.lcdfilter:  lcddefault
Xft.hintstyle:  hintfull
Xft.hinting: 1
Xft.antialias: 1
Xft.dpi: 96
Xft.rgba: rgb
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    &lt;small&gt;注：infinality 上提到 /etc/profile.d/infinality-settings.sh 文件可以自动配置 /etc/X11/Xresources 及 ~/.Xresources 文件，但我的情况，/etc/ 目录下是没有 profile.d 文件夹的。&lt;/small&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    接着重启系统。
  &lt;/p&gt;
  
  &lt;p&gt;
    如果需要修改字体渲染的配置文件，可以进入 /etc/fonts/infinality 目录：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;$ ./infctl.sh setstyle
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    运行后会提示几个可用的字体渲染配置方法，选择数字然后按确定即可。
  &lt;/p&gt;
  
  &lt;p&gt;
    至此，openSUSE 上的配置 infinality 算是完成。
  &lt;/p&gt;
  
  &lt;p&gt;
    至于效果，上图看看：
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-fonts-infinality.png&#34;&gt;&lt;img src=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-fonts-infinality.png&#34; alt=&#34;opensuse 字体美化 渲染 infinality&#34; width=&#34;448&#34; height=&#34;292&#34; class=&#34;alignnone size-full wp-image-11080&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-fonts-infinality.png 448w, https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-fonts-infinality-300x195.png 300w&#34; sizes=&#34;(max-width: 448px) 100vw, 448px&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;em&gt;另外，在我的系统里，Firefox在某些页面里，中文渲染的情况非常糟糕，有发虚的现象。后来安装了&lt;a href=&#34;http://wenq.org/wqy2/index.cgi?MicroHei&#34;&gt;文泉驿微米黑&lt;/a&gt;，才算正常。&lt;/em&gt;
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;问题汇&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      在我从命令窗口开启 Kaffeine 时，错误提示：
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;blockquote&gt;
    &lt;p&gt;
      Fontconfig warning: &amp;#8220;/etc/fonts/conf.d/56-user.conf&amp;#8221;, line 14: reading configurations from ~/.fonts.conf is deprecated. please move it to /home/sam/config/fontconfig/fonts.conf manually
    &lt;/p&gt;
  &lt;/blockquote&gt;
  
  &lt;p&gt;
    查看 /etc/fonts/conf.d/56-user.conf 文件，是一个指向 /usr/share/fontconf/conf.avail/50-user.conf 的软链接，里面的内容表示以上错误提示在将来会被移除。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 升级 12.3 到 13.1</title>
      <link>https://www.zfanw.com/blog/opensuse-upgrade-12-3-to-13-1.html</link>
      <pubDate>Tue, 19 Nov 2013 22:53:14 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/opensuse-upgrade-12-3-to-13-1.html</guid>
      <description>&lt;p&gt;因为是初次跨版本升级 openSUSE，虽说碰上几个问题，但总算安稳度过。&lt;/p&gt;

&lt;p&gt;升级的方法参照了两个：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.opensuse.org/SDB:System_upgrade&#34;&gt;官网说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.suse.org.cn/viewtopic.php?f=2&amp;amp;t=173&#34;&gt;Marguerite Su 提供的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我碰上的问题有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;控制台里乱码，许多文字显示成方块&lt;/p&gt;

&lt;p&gt;我的解决办法是控制台里登录root账户。&lt;/p&gt;

&lt;p&gt;Marguerite Su 提供的方法是：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;tty 显示不了中文，请先 export LANG=en_US.UTF-8&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下载过程卡住&lt;/p&gt;

&lt;p&gt;我的情况，总共2074个文件要下载，但下载到第99个文件时，卡了好几个小时不曾动。后来实在忍不住，就冒险按了两次&lt;kbd&gt;Ctrl-C&lt;/kbd&gt;中止过程，重新启动 &lt;code&gt;zypper dup&lt;/code&gt;，却是恢复正常了。后来想想，也许先让系统把所有要更新的文件下载下来会比较合适：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   # zypper dup --download &amp;quot;in-advance&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 自定义快捷键</title>
      <link>https://www.zfanw.com/blog/opensuse-custom-shortcuts.html</link>
      <pubDate>Mon, 04 Nov 2013 11:53:48 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/opensuse-custom-shortcuts.html</guid>
      <description>&lt;p&gt;我嫌 openSUSE 的 &lt;kbd&gt;Alt+F2&lt;/kbd&gt; 太慢，就装了个 &lt;a href=&#34;http://software.opensuse.org/package/dmenu&#34;&gt;dmenu&lt;/a&gt;。安装完后，倒是可以通过命令行里运行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dmenu_run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不过总不能这样输入命令调用。&lt;/p&gt;

&lt;p&gt;openSUSE 提供有自定义快捷键，&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-custom-shortcuts.png&#34;&gt;&lt;img src=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-custom-shortcuts.png&#34; alt=&#34;openSUSE 自定义快捷键&#34; width=&#34;599&#34; height=&#34;278&#34; class=&#34;alignnone size-full wp-image-10910&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-custom-shortcuts.png 599w, https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-custom-shortcuts-300x139.png 300w&#34; sizes=&#34;(max-width: 599px) 100vw, 599px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上图中，Trigger 部分定义快捷键，Action 定义快捷键触发的命令。我的习惯，是配置 &lt;kbd&gt;Win + R&lt;/kbd&gt; &amp;#8211; 这习惯大概是从 &lt;a href=&#34;http://awesome.naquadah.org/&#34;&gt;awesome&lt;/a&gt; 或 &lt;a href=&#34;http://xmonad.org/&#34;&gt;xmonad&lt;/a&gt; 里来的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 下快速切换打开的窗口</title>
      <link>https://www.zfanw.com/blog/opensuse-switch-windows.html</link>
      <pubDate>Sat, 02 Nov 2013 16:43:29 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/opensuse-switch-windows.html</guid>
      <description>

&lt;p&gt;我一直认为，Alt + Tab 这样的切换运行任务的方式非常低效。这也是我在 Windows 系统下使用 &lt;a href=&#34;http://www.zfanw.com/blog/windows-switch-opened-application.html&#34;&gt;iSwitchw&lt;/a&gt; 脚本的原因。&lt;/p&gt;

&lt;p&gt;openSUSE 有类似功能，不过颇隐蔽。&lt;/p&gt;

&lt;p&gt;按 &lt;kbd&gt;Alt - F1&lt;/kbd&gt;，打开桌面左下的主菜单，然后点击 Configure Desktop(配置桌面)，进入界面后，打开 Shortcuts and Gestures，定位到 Global Keyboard Shortcuts，KDE component 下拉菜单中选择 Run Command Interface，然后配置下方的 「Runner &amp;#8220;Windows&amp;#8221; only」：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-run-command-windows.png&#34;&gt;&lt;img src=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-run-command-windows.png&#34; alt=&#34;opensuse 切换运行中的窗口&#34; width=&#34;623&#34; height=&#34;593&#34; class=&#34;alignnone size-full wp-image-10900&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-run-command-windows.png 623w, https://www.zfanw.com/blog/wp-content/uploads/2013/11/opensuse-run-command-windows-300x285.png 300w&#34; sizes=&#34;(max-width: 623px) 100vw, 623px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我的习惯，是使用 &lt;kbd&gt;Win + W&lt;/kbd&gt; 键。&lt;/p&gt;

&lt;p&gt;调出小窗口后，输入要定位的窗口标题，然后回车即可。&lt;/p&gt;

&lt;h2 id=&#34;补充&#34;&gt;补充&lt;/h2&gt;

&lt;p&gt;KDE 下其实还有一个预览当前所有打开窗口的方法，只要把光标移动到桌面左上角，或者按&lt;kbd&gt;Ctrl-F9&lt;/kbd&gt;(预览当前桌面所有打开窗口)、&lt;kbd&gt;Ctrl-F10&lt;/kbd&gt;(预览所有桌面的所有打开窗口)。之后在预览里输入标题信息即可自动过滤。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 安装配置 NGINX</title>
      <link>https://www.zfanw.com/blog/nginx-config.html</link>
      <pubDate>Tue, 22 Oct 2013 14:13:28 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/nginx-config.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 环境&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_nginx&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 安装 nginx&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_nginx-2&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 启动 nginx&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_nginx-3&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;4&lt;/span&gt; 配置 nginx&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    本来这篇是在 Ubuntu 下完成的，因为升级过程中出了点小差错，于是变成在 openSUSE 上完成。
  &lt;/p&gt;
  
  &lt;p&gt;
    我的配置 Web 服务器，只要最简单的，不需要数据库，不需要 PHP 等。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;环境&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;
        openSUSE 12.3
      &lt;/p&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;p&gt;
        KDE
      &lt;/p&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;p&gt;
        Konsole + ZSH
      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_nginx&#34;&gt;安装 nginx&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_nginx&#34; href=&#34;#_nginx&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;pre&gt;&lt;code&gt;cnf nginx
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    &lt;code&gt;cnf&lt;/code&gt; 命令会自动查找 nginx 命令，如果系统上还没安装，它会提示你安装哪个包：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo zypper install nginx
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_nginx-2&#34;&gt;启动 nginx&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_nginx-2&#34; href=&#34;#_nginx-2&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    再使用 &lt;code&gt;cnf nginx&lt;/code&gt; 检查的话，可以看到，nginx 可执行文件位于 &lt;code&gt;/usr/sbin/nginx&lt;/code&gt; 位置，需要 root 权限才可以运行。
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo /usr/sbin/nginx
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    之后输入 root 密码。
  &lt;/p&gt;
  
  &lt;p&gt;
    打开 &lt;a href=&#34;http://localhost&#34;&gt;localhost&lt;/a&gt; 地址，页面显示：
  &lt;/p&gt;
  
  &lt;blockquote&gt;
    &lt;p&gt;
      &lt;strong&gt;403 Forbidden&lt;/strong&gt;
    &lt;/p&gt;
    
    &lt;p&gt;
      nginx/1.2.9
    &lt;/p&gt;
  &lt;/blockquote&gt;
  
  &lt;p&gt;
    之所以返回 403 错误，是因为 localhost 默认的根目录(/srv/www/htdocs/)下不存在 index.html 文件。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_nginx-3&#34;&gt;配置 nginx&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_nginx-3&#34; href=&#34;#_nginx-3&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    如果尝试往 /srv/www/htdocs/ 目录下写入文件，就会发现，这个目录需要 root 权限才可以操作。我显然不想每次编辑 HTML/CSS/js 文件都需要加 sudo。
  &lt;/p&gt;
  
  &lt;p&gt;
    打开 /etc/nginx/ 目录，编辑目录下的 nginx.conf 配置文件：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo vim nginx.conf
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    查找 /srv/www/htdocs 字样，将其修改为其他目录，比如 /home/sam/front/htdocs。
  &lt;/p&gt;
  
  &lt;p&gt;
    之后重启 nginx：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;sudo /usr/sbin/nginx -s reload
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    刷新 &lt;a href=&#34;http://localhost&#34;&gt;localhost&lt;/a&gt;，如果还是显示 403，则说明配置成功。之后把我的前端文件夹放在其中即可。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>openSUSE 安装 MPlayer</title>
      <link>https://www.zfanw.com/blog/opensuse-install-mplayer.html</link>
      <pubDate>Sat, 19 Oct 2013 04:10:32 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/opensuse-install-mplayer.html</guid>
      <description>&lt;p&gt;在 Ubuntu 上，我一直都用 MPlayer 播放视频，简单的几个快捷键就可以控制快进、音量等，非常方便。&lt;/p&gt;

&lt;p&gt;这次切换系统到 openSUSE 12.3 上也不想例外。&lt;/p&gt;

&lt;p&gt;安装方法如下。&lt;/p&gt;

&lt;p&gt;首先是添加 PackMan 源：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zypper ar http://mirror.pcbeta.com/packman/suse/openSUSE_12.3/Essentials/ packman-essentials
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;附：&lt;small&gt;更多 &lt;a href=&#34;http://packman.links2linux.org/mirrors&#34;&gt;PackMan 源链接&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;然后就可以使用 zypper 命令安装 MPlayer 了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo zypper install mplayer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令行里输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mplayer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果有显示相关信息，则说明安装成功。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>