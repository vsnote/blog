<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端优化 on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in 前端优化 on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 20 Jul 2013 09:32:50 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Gruntjs 批量无损压缩图片大小</title>
      <link>https://www.zfanw.com/blog/gruntjs-optimize-image-size-loseless.html</link>
      <pubDate>Sat, 20 Jul 2013 09:32:50 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/gruntjs-optimize-image-size-loseless.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_imagemin&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 安装 imagemin 插件&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 配置压缩图片任务&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    Photoshop 切出的图片，含有多余信息，它们对网页前端并没有用处，反而增加图片大小，所以 Google Web Fundamentals 里建议我们&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization#tools-and-parameter-tuning&#34;&gt;使用工具&lt;/a&gt;压缩图片大小，减少用户下载的文件大小。
  &lt;/p&gt;
  
  &lt;p&gt;
    如果你用 Grunt.js，我们就可以借助它的插件 &lt;a href=&#34;https://github.com/gruntjs/grunt-contrib-imagemin&#34;&gt;Grunt-contrib-imagemin&lt;/a&gt; 来批量、无损压缩图片大小。
  &lt;/p&gt;
  
  &lt;p&gt;
    如果你对 Grunt.js 不了解，可以看我上一篇&lt;a href=&#34;http://www.zfanw.com/blog/gruntjs.html&#34;&gt;简单介绍&lt;/a&gt;。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_imagemin&#34;&gt;安装 imagemin 插件&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_imagemin&#34; href=&#34;#_imagemin&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    切换到项目文件夹，
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;cd projectName
npm install grunt-contrib-imagemin --save-dev
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;配置压缩图片任务&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    接下来配置 Gruntfile.js 文件，定义优化图片大小的任务：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;/*global module:false*/
module.exports = function (grunt) {
  &#39;use strict&#39;
  grunt.initConfig({
    imagemin: {
      /* 压缩图片大小 */
      dist: {
        options: {
          optimizationLevel: 3 // 定义 PNG 图片优化水平
        },
        files: [{
          expand: true,
          cwd: &#39;img/&#39;,
          src: [&#39;**/*.{png,jpg,jpeg}&#39;], // 优化 img 目录下所有 png/jpg/jpeg 图片
          dest: &#39;img/&#39; // 优化后的图片保存位置，覆盖旧图片，并且不作提示
        }]
      }
    },
  })
  grunt.loadNpmTasks(&#39;grunt-contrib-imagemin&#39;)
  grunt.registerTask(&#39;img&#39;, [&#39;imagemin&#39;])
}

&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    运行 &lt;code&gt;grunt imagemin&lt;/code&gt; 命令：
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/07/Screenshot-from-2013-07-20-135942.png&#34;&gt;&lt;img src=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/07/Screenshot-from-2013-07-20-135942.png&#34; alt=&#34;Gruntjs 批量压缩图片大小&#34; width=&#34;548&#34; height=&#34;187&#34; class=&#34;alignnone size-full wp-image-9672&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2013/07/Screenshot-from-2013-07-20-135942.png 548w, https://www.zfanw.com/blog/wp-content/uploads/2013/07/Screenshot-from-2013-07-20-135942-300x102.png 300w&#34; sizes=&#34;(max-width: 548px) 100vw, 548px&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    上图可以看到，图片压缩的比率非常可观。之后再使用 &lt;a href=&#34;https://developers.google.com/speed/pagespeed/insights&#34;&gt;Google PageSpeed 工具&lt;/a&gt;检测，就不再提醒我们压缩图片。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Web 前端优化 – 缓存页面组件</title>
      <link>https://www.zfanw.com/blog/caching-in-http.html</link>
      <pubDate>Wed, 31 Oct 2012 06:28:08 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/caching-in-http.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 设置方法&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-2&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 参考&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    在 Web 前端优化里，缓存页面组件是很重要的一项。不常改动的图片、CSS 、JavaScript 文件等，可以缓存在浏览器中，这样，用户再次访问时，浏览器直接从缓存中读取文件，一来减少浏览器请求数，加快用户访问速度，二来服务器需要返回的内容少了，减轻服务器负担。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;设置方法&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    缓存页面组件的方法有多种，这一种是修改 HTTP 头。
  &lt;/p&gt;
  
  &lt;p&gt;
    假设服务器是 Apache，可以通过配置 .htaccess 文件来启用缓存：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;&amp;lt;IfModule mod_expires.c&amp;gt;
    # 启用缓存
    ExpiresActive On

    #默认缓存时间为 1 天
    ExpiresDefault &#34;access plus 1 day&#34;

    #图片的缓存时间设置为一周
    ExpiresByType image/x-icon &#34;access plus 7 days&#34;
    ExpiresByType image/jpeg &#34;access plus 7 days&#34;
    ExpiresByType image/png &#34;access plus 7 days&#34;
    ExpiresByType image/gif &#34;access plus 7 days&#34;


    ExpiresByType application/x-shockwave-flash &#34;access plus 7 days&#34;

    #CSS 的缓存时间也设置成一周
    ExpiresByType text/css &#34;access plus 7 day&#34;

    #Javascript 的缓存时间同样设置为一周
    ExpiresByType text/javascript &#34;access plus 7 day&#34;
    ExpiresByType application/x-javascript &#34;access plus 7 day&#34;


    ExpiresByType text/html &#34;access plus 10 minutes&#34;
    ExpiresByType application/xhtml+xml &#34;access plus 10 minutes&#34;
&amp;lt;/IfModule&amp;gt;
&amp;lt;IfModule mod_headers.c&amp;gt;
    #设置代理缓存
  &amp;lt;FilesMatch &#34;\.(js|css|xml|gz|html)$&#34;&amp;gt;
    Header append Vary: Accept-Encoding
  &amp;lt;/FilesMatch&amp;gt;
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    以上配置针对&lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_media_type&#34;&gt;不同类型文件&lt;/a&gt;设置不同有效期限，比如 jpeg/png/gif 图片，从用户第一次访问算起，7 天内有效，如果用户在 7 天内还访问这个网站，则直接从浏览器缓存中读取该图片，无需服务器上再返回。
  &lt;/p&gt;
  
  &lt;p&gt;
    打开 firebug，启用 Net 面板，刷新页面，如果看到有返回状态码 304 Not Modified 的文件，说明设置成功。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-2&#34;&gt;参考&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-2&#34; href=&#34;#i-2&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&#34;&gt;w3 &amp;#8211; caching in http&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://www.mnot.net/cache_docs/&#34;&gt;cache docs&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://httpd.apache.org/docs/2.2/mod/mod_expires.html&#34;&gt;Apache mod_expires&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://httpd.apache.org/docs/current/mod/mod_headers.html#header&#34;&gt;Apache mod_headers&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>