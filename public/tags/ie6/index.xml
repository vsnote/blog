<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ie6 on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/ie6/</link>
    <description>Recent content in Ie6 on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 18 Aug 2013 12:48:27 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/ie6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>IE6、7下的 z-index 问题</title>
      <link>https://www.zfanw.com/blog/ie6-7-z-index-bug.html</link>
      <pubDate>Sun, 18 Aug 2013 12:48:27 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/ie6-7-z-index-bug.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#_z-index&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 现代浏览器下 z-index 值比较&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#IE67_z-index&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; IE6、7下 z-index 值比较&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 调试、解决&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    一般在使用 z-index 时，哪怕我们不十分清楚 z-index 概念，也很少会碰上问题。
  &lt;/p&gt;
  
  &lt;p&gt;
    但 IE6、7 对 z-index 层叠上下文(stacking context) 生成条件有点误会，会对现实应用造成困扰，也就是常见的 z-index 失效问题。
  &lt;/p&gt;
  
  &lt;p&gt;
    看一个别人的 &lt;a href=&#34;http://therealcrisp.xs4all.nl/meuk/IE-zindexbug.html&#34;&gt;demo&lt;/a&gt;。Demo 中，IE6、7 下， &lt;code&gt;position:relative&lt;/code&gt; 也生成一个上下文。而根据 &lt;a href=&#34;http://www.w3.org/TR/CSS21/visuren.html#z-index&#34;&gt;W3C 规范&lt;/a&gt;，这是错误的。
  &lt;/p&gt;
  
  &lt;p&gt;
    且按照 IE6、7 的错误理解，来分析下 z-index 是怎么比较大小的。
  &lt;/p&gt;
  
  &lt;p&gt;
    Demo 的 HTML 代码如下：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;&amp;lt;div id=&#34;container&#34;&amp;gt;
    &amp;lt;div id=&#34;box1&#34;&amp;gt;This box should be on top&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div id=&#34;box2&#34;&amp;gt;This box should not be on top; IE however seems to create a new stacking context for positioned elements, even when the computed z-index of that element is &#39;auto&#39;.&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    CSS 代码：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;#container {
    position: relative;
}
#box1 {
    background-color: yellow;
    height: 200px;
    left: 510px;
    position: absolute;
    top: 100px;
    width: 200px;
    z-index: 20;
}
#box2 {
    background-color: lime;
    height: 200px;
    left: 460px;
    position: absolute;
    top: 50px;
    width: 200px;
    z-index: 10;
}
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;_z-index&#34;&gt;现代浏览器下 z-index 值比较&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;hey_z-index&#34; href=&#34;#_z-index&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    在现代浏览器中，绝对定位的 #box1 与 #box2 元素均参照初始包含块比较 z-index 值，假定初始包含块 z-index 值为0：
  &lt;/p&gt;
  
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;
      &lt;/th&gt;
      
      &lt;th&gt;
        #box1
      &lt;/th&gt;
      
      &lt;th&gt;
        #box2
      &lt;/th&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        html
      &lt;/td&gt;
      
      &lt;td&gt;
      &lt;/td&gt;
      
      &lt;td&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        自身
      &lt;/td&gt;
      
      &lt;td&gt;
        20
      &lt;/td&gt;
      
      &lt;td&gt;
        10
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  
  &lt;p&gt;
    如果我们也按 CSS 规则的权重排列来理解上面的值：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;#box1 - 0,20
#box2 - 0,10
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    显然，#box1 要排在 #box2 上面，即黄色块在绿色块上。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;IE67_z-index&#34;&gt;IE6、7下 z-index 值比较&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyIE67_z-index&#34; href=&#34;#IE67_z-index&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    因为 &lt;code&gt;position:relative&lt;/code&gt; 也生成了一个上下文，于是上面的表格会变成：
  &lt;/p&gt;
  
  &lt;table&gt;
    &lt;tr&gt;
      &lt;th&gt;
      &lt;/th&gt;
      
      &lt;th&gt;
        #box1
      &lt;/th&gt;
      
      &lt;th&gt;
        #box2
      &lt;/th&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        html
      &lt;/td&gt;
      
      &lt;td&gt;
      &lt;/td&gt;
      
      &lt;td&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        &amp;#35;container
      &lt;/td&gt;
      
      &lt;td&gt;
      &lt;/td&gt;
      
      &lt;td&gt;
        &amp;#8211;
      &lt;/td&gt;
    &lt;/tr&gt;
    
    &lt;tr&gt;
      &lt;td&gt;
        自身
      &lt;/td&gt;
      
      &lt;td&gt;
        20
      &lt;/td&gt;
      
      &lt;td&gt;
        10
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  
  &lt;p&gt;
    对比如下：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;#box1 - 0,0,20
#box2 - 0,10
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    这样，#box2 变成在 #box1 上面。
  &lt;/p&gt;
  
  &lt;p&gt;
    解决办法是给 &lt;code&gt;#container&lt;/code&gt; 元素设置一个大于10的 z-index 值：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;#box1 - 0,11,20
#box2 - 0,10
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    你可能想问设置为10为什么不行，因为同一个 z-index 值，后绘制的与之前的内容如果有交叉区域，则会覆盖之前的内容 &amp;#8211; 这是我的理解。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;调试、解决&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    当给一个元素设置 &lt;code&gt;z-index:9999&lt;/code&gt; 时，IE6、7 下元素层叠还是无效，则可以按上面所描述的，从初始包含块开始，找出所有层叠上下文，然后对比 z-index 值。一旦 z-index 链路明确，也就知道该在哪个节点下手。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>IE6 下的 PNG 透明</title>
      <link>https://www.zfanw.com/blog/ie6-png-transparent.html</link>
      <pubDate>Wed, 14 Aug 2013 11:19:46 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/ie6-png-transparent.html</guid>
      <description>

&lt;p&gt;就我的实践经验，IE6 下解决 PNG 图片透明问题，&lt;a href=&#34;http://www.dillerdesign.com/experiment/DD_belatedPNG/&#34;&gt;DD_belatedPNG&lt;/a&gt; 是比较方便的。&lt;/p&gt;

&lt;p&gt;它的用法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--[if IE 6]&amp;gt;
&amp;lt;script src=&amp;quot;DD_belatedPNG.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  /* EXAMPLE */
  DD_belatedPNG.fix(&#39;.png_bg&#39;);

  /* string argument can be any CSS selector */
  /* .png_bg example is unnecessary */
  /* change it to what suits you! */
&amp;lt;/script&amp;gt;
&amp;lt;![endif]--&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很多人可能就参照它的示例写，比如，腾讯旗下的导航站是这样写的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
try{
    if(DD_belatedPNG){
        DD_belatedPNG.fix(&#39;img,li.png-filter a span.qqicon-logout,li.png-filter a span.qqicon,.icon-weixin,.mailInput-icon-unfold,#changeSearchEngine_ICON,#currentMail-s,.engineWrap a,.game-box .caption a.little-game, .game-box .caption a.page-game, .game-box .caption a.web-game, .xzSelect .drop, .xzClosed, .xzClosed.hover,ul.channel-videoImg span.title em,.down-icon,.history-del,.channel-videoline,.videoplay,.video-pages a,.v-new&#39;);
    }
}catch(e){};
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们能看到，&lt;code&gt;fix&lt;/code&gt; 里有一堆的 class 及 id 又或者其他 CSS 选择符。这一堆代码维护起来很困难 &amp;#8211; 写了基本就不要想修改。&lt;/p&gt;

&lt;p&gt;我的方法是，只设定一个 CSS 类 &lt;code&gt;pngfix&lt;/code&gt;，凡使用 PNG 透明图片的元素，都加上该类，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2 class=&amp;quot;pngfix&amp;quot;&amp;gt;Goodbye IE6&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后 JavaScript 语句只要一句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DD_belatedPNG.fix(&#39;.pngfix&#39;);   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;又因为我在 CSS 中抽象出一个 &lt;a href=&#34;http://www.zfanw.com/blog/css-sprite.html&#34;&gt;贴图定位的类&lt;/a&gt; &lt;code&gt;.sprite&lt;/code&gt;，则连 &lt;code&gt;.pngfix&lt;/code&gt; 都可以省掉，直接使用 &lt;code&gt;.sprite&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DD_belatedPNG.fix(&#39;.sprite&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;如果背景图片使用 CSS 贴图定位，DD_belatedPNG 这个方法同样存在些问题，比如背景图片有1像素的偏移&lt;/li&gt;
&lt;li&gt;如果 PNG 使用 map 热点，则 DD_belatedPNG 处理后，热点的链接会无法点击，一个替代方法是 &lt;a href=&#34;http://labs.unitinteractive.com/unitpngfix.php&#34;&gt;Unit PNG Fix&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>我对 IE6、7的态度</title>
      <link>https://www.zfanw.com/blog/deal-with-old-ie.html</link>
      <pubDate>Wed, 07 Aug 2013 13:46:14 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/deal-with-old-ie.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 现实&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#IE67&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; IE6、7背后的逻辑&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;现实&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    现实是，因为某种原因，IE6、7在中国浏览器市场上，还&lt;a href=&#34;http://www.ie6countdown.com/&#34;&gt;占有不少份额&lt;/a&gt;。没有几家互联网行业公司可以绕开它们，我们从事前端开发的，也就必须面对它们。
  &lt;/p&gt;
  
  &lt;p&gt;
    我看过不少人在他们的博客分享 IE6、7的问题或解决办法，评论里就有人说，IE6 这么古老的东西，早该放弃，不必要纠结。我猜想这些人大概不做前端开发，又或者他们的公司不要求兼容低版本 IE 浏览器。这是幸事，但也不必要因此说责他人。我想没几个前端开发人员喜欢调试 IE6、7，大概是工作需要，所以不得已要面对。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;IE67&#34;&gt;IE6、7背后的逻辑&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyIE67&#34; href=&#34;#IE67&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    浮动时双边距是什么逻辑？IE6 自动扩展包含块又是什么逻辑？&amp;#8230;&amp;#8230;
  &lt;/p&gt;
  
  &lt;p&gt;
    在我开始接触这些所谓 IE 浏览器 Bug 时，我很努力想了解它们背后的逻辑。因为我私以为，了解它们背后的逻辑，才能更好地解决问题。但后来我发现，自己错了。这些非标准背后，也许有其逻辑，但它的逻辑相对于标准来说，只能是“非逻辑”。谁来告诉我，IE6、7下，margin 与 padding 为什么会存在消失或合并的问题？也许 IE 的开发者们知道，但他们不曾解释。
  &lt;/p&gt;
  
  &lt;p&gt;
    我现在改变想法，不再试图了解 IE6、7 Bug 背后的逻辑。我觉得我要做的，是利用各种已知或试验可行的 hack 技术，保证页面与标准的相近 &amp;#8211; 这就够了。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使用 YUI3 网格的注意事项</title>
      <link>https://www.zfanw.com/blog/yui3-css-grid.html</link>
      <pubDate>Tue, 23 Jul 2013 11:44:23 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/yui3-css-grid.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#letter-spacing&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; letter-spacing 取值&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#IE67&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; IE6、7次像素问题&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 参考&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;letter-spacing&#34;&gt;letter-spacing 取值&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyletter-spacing&#34; href=&#34;#letter-spacing&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://yui.yahooapis.com/3.10.3/build/cssgrids/cssgrids.css&#34;&gt;YUI3 网格&lt;/a&gt; 使用 &lt;code&gt;display:inline-block;&lt;/code&gt; 布局网页。
  &lt;/p&gt;
  
  &lt;p&gt;
    inline-block 元素间存在间隙，这间隙由空白符引起，而空白符的宽度又由字体集决定，YUI3 使用 &lt;code&gt;letter-spacing&lt;/code&gt;、&lt;code&gt;word-spacing&lt;/code&gt; 消除间隙：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;.yui3-g {
    letter-spacing: -0.31em; /* Webkit: collapse white-space between units */
    *letter-spacing: normal; /* reset IE &amp;lt; 8 */
    *word-spacing: -0.43em; /* IE &amp;lt; 8: collapse white-space between units */
    text-rendering: optimizespeed; /* Webkit: fixes text-rendering: optimizeLegibility */
}

/* Opera as of 12 on Windows needs word-spacing.
   The &#34;.opera-only&#34; selector is used to prevent actual prefocus styling
   and is not required in markup.
*/
.opera-only :-o-prefocus,
.yui3-g {
    word-spacing: -0.43em;
}

.yui3-u {
    display: inline-block;
    zoom: 1; *display: inline; /* IE &amp;lt; 8: fake inline-block */
    letter-spacing: normal;
    word-spacing: normal;
    vertical-align: top;
    text-rendering: auto;
}
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    但 YUI3 中，&lt;code&gt;letter-spacing&lt;/code&gt;、&lt;code&gt;word-spaceing&lt;/code&gt; 取值基于字体集 Arial，这就有一种可能：一旦类定义的字体集被覆写，有可能破坏布局。
  &lt;/p&gt;
  
  &lt;p&gt;
    比如：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;&amp;lt;div class=&#34;yui3-g main&#34;&amp;gt;
    &amp;lt;div class=&#34;yui3-u-1-2 bgc-r&#34;&amp;gt;red background&amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;yui3-u-1-2 bgc-g&#34;&amp;gt;green background&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&#34;yui3-g main-mirror&#34;&amp;gt;
    &amp;lt;div class=&#34;yui3-u-1-2 bgc-r&#34;&amp;gt;red background&amp;lt;/div&amp;gt;
    &amp;lt;div class=&#34;yui3-u-1-2 bgc-g&#34;&amp;gt;green background&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
    .bgc-r {
        background:red;
    }
    .bgc-g {
        background:green;
    }
    .main-mirror {
        font-family:Courier;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    因为 &lt;code&gt;.yui3-g&lt;/code&gt; 的 &lt;code&gt;font-family&lt;/code&gt; 被 &lt;code&gt;.main-mirror&lt;/code&gt; 覆写，本该并列的第二列却脱落到下一行：
  &lt;/p&gt;
  
  &lt;p&gt;
    我们显然无法保证自己或他人不会覆写 &lt;code&gt;.yui3-g&lt;/code&gt; 的字体集，这种不可预测性，会造成麻烦。
  &lt;/p&gt;
  
  &lt;p&gt;
    目前，在这个问题上，还没有银子弹存在。
  &lt;/p&gt;
  
  &lt;p&gt;
    一个妥协办法，是强制声明 &lt;code&gt;.yui3-g&lt;/code&gt; 字体集为默认。
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;.yui3-g{font-family: Arial;}
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    然后在 &lt;code&gt;yui3-u&lt;/code&gt; 及 &lt;code&gt;yui3-u-*-*&lt;/code&gt; 中声明我们要使用的字体：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;.yui3-u,
.yui3-u-1,
.yui3-u-1-2,
.yui3-u-1-3,
.yui3-u-2-3,
.yui3-u-1-4,
.yui3-u-3-4,
.yui3-u-1-5,
.yui3-u-2-5,
.yui3-u-3-5,
.yui3-u-4-5,
.yui3-u-1-6,
.yui3-u-5-6,
.yui3-u-1-8,
.yui3-u-3-8,
.yui3-u-5-8,
.yui3-u-7-8,
.yui3-u-1-12,
.yui3-u-5-12,
.yui3-u-7-12,
.yui3-u-11-12,
.yui3-u-1-24,
.yui3-u-5-24,
.yui3-u-7-24,
.yui3-u-11-24,
.yui3-u-13-24,
.yui3-u-17-24,
.yui3-u-19-24,
.yui3-u-23-24 {
  font-family: 宋体,Arial;
}
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;IE67&#34;&gt;IE6、7次像素问题&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyIE67&#34; href=&#34;#IE67&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    IE6、7浏览器下，0.5~1的像素会四舍五入成1像素，破坏流式布局。
  &lt;/p&gt;
  
  &lt;p&gt;
    举个例子，301宽度的块，定义两个子块，类名为 &lt;code&gt;.yui3-u-1-2&lt;/code&gt;，在 IE6、7下，右侧子块会掉落，而不是并排:
  &lt;/p&gt;
  
  &lt;p&gt;
    解决办法见&lt;a href=&#34;http://tylertate.com/blog/2012/01/05/subpixel-rounding.html&#34;&gt;这个链接&lt;/a&gt;。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;参考&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;a href=&#34;https://github.com/yui/pure/issues/41&#34;&gt;grids spacing wrong without Arial on pure-g, pure-g-r&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://yuilibrary.com/projects/yui3/ticket/2533215&#34;&gt;CSS Grid 2 column layout, columns not appearing side by side.&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;https://github.com/csswizardry/inuit.css/issues/170&#34;&gt;Inline-block and white space in the grid&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://yuilibrary.com/yui/environments/&#34;&gt;YUI 支持的浏览器&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>IE6、7、8 与 RGBA</title>
      <link>https://www.zfanw.com/blog/ie6-ie7-ie8-rgba.html</link>
      <pubDate>Thu, 18 Jul 2013 14:46:07 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/ie6-ie7-ie8-rgba.html</guid>
      <description>

&lt;p&gt;Google Chrome 自 1.0 开始支持 RGBA，Firefox 从 3.0 开始，IE 比较晚，从 IE9 才开始。&lt;/p&gt;

&lt;p&gt;rgba 很常用，可以给颜色设置透明度，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p style=&amp;quot;background:rgba(0,255,0,.3);&amp;quot;&amp;gt;hello rgba&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示效果如下：&lt;/p&gt;

&lt;p style=&#34;background:rgba(0,255,0,.3)&#34;&gt;
  hello rgba
&lt;/p&gt;

&lt;p&gt;现代浏览器中，我们看到的是浅绿色背景，黑色字体。IE6、7、8 不认识 rgba 规则，所以会忽略它，就像没有声明过背景一样 &amp;#8211; 所以是白底黑字。&lt;/p&gt;

&lt;p&gt;但借助 IE 私有滤镜(filter)，我们可以达到同样效果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;bga&amp;quot;&amp;gt;hello rgba&amp;lt;/p&amp;gt;

&amp;lt;!--[if IE]&amp;gt; 
&amp;lt;style&amp;gt;
.bga{
    background:transparent;
    -ms-filter: &amp;quot;progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr=&#39;#4C00FF00&#39;, EndColorStr=&#39;#4C00FF00&#39;)&amp;quot;;/* IE8 */
    filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, StartColorStr=&#39;#4C00FF00&#39;, EndColorStr=&#39;#4C00FF00&#39;);/* IE6、7 */
    zoom: 1;
}
&amp;lt;![endif]--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在，IE6、7、8 中，效果就跟现代浏览器一样了：&lt;/p&gt;

&lt;p class=&#34;bga&#34;&gt;
  hello rgba
&lt;/p&gt;

&lt;!--[if IE]&gt; 

&lt;![endif]--&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&#34;&gt;MDN &amp;#8211; CSS color value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ie/ms530752(v=vs.85).aspx&#34;&gt;MSDN -ms-filter property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zfanw.com/tools/argb-rgba.html&#34;&gt;rgba &amp;#8211; argb 转换工具&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>伸出包含块的子元素</title>
      <link>https://www.zfanw.com/blog/elment-overflow-container-top-direction.html</link>
      <pubDate>Sat, 13 Jul 2013 15:40:50 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/elment-overflow-container-top-direction.html</guid>
      <description>&lt;p&gt;一个菜单栏中，突出当前菜单项的背景色是很常见的：&lt;/p&gt;

&lt;ul class=&#34;nav-menu clearfix&#34;&gt;
  &lt;li class=&#34;nav-menu__item active&#34;&gt;
    &lt;a href=&#34;&#34;&gt;第一个&lt;/a&gt;
  &lt;/li&gt;
  &lt;li class=&#34;nav-menu__item&#34;&gt;
    &lt;a href=&#34;&#34;&gt;我第二&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果要求当前菜单项的背景伸出父元素顶部1像素又如何？&lt;/p&gt;

&lt;p&gt;先来看上例的代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul class=&amp;quot;nav-menu clearfix&amp;quot;&amp;gt;
    &amp;lt;li class=&amp;quot;nav-menu__item active&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;第一个&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&amp;quot;nav-menu__item&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;我第二&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;style&amp;gt;
    .nav-menu{
        background:#0175cc;
        height:28px;
    }
    .nav-menu__item{
        float:left;
        font-size:14px;
        line-height:2;
        margin:0 10px;
        list-style:none;
        text-align:center;
    }
    .nav-menu__item a{
        float:left;
        background:#333;
        color:#fff;
        padding:0 10px;
    }
    .nav-menu__item.active a{
        background:red;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;给 a 元素添加1像素的顶部边框：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.nav-menu__item a {border-top:1px solid #fff;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为 a 的高度超出父元素，父元素默认 &lt;code&gt;overflow&lt;/code&gt; 的内容可见，所以呈现的结果如下：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ul class=&#34;nav-menu2 clearfix&#34;&gt;
  &lt;li class=&#34;nav-menu2__item active&#34;&gt;
    &lt;a href=&#34;&#34;&gt;第一个&lt;/a&gt;
  &lt;/li&gt;
  &lt;li class=&#34;nav-menu2__item&#34;&gt;
    &lt;a href=&#34;&#34;&gt;我第二&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;把 a 元素向上偏移1像素&lt;/p&gt;

&lt;p&gt;这里我们通过 &lt;code&gt;position:relative&lt;/code&gt; 来提升 a 元素的位置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.nav-menu__item a {position:relative;top:-1px;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为边框颜色是白的，与大包含块背景色一样，所以我们看不到顶部边框，如下：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ul class=&#34;nav-menu3 clearfix&#34;&gt;
  &lt;li class=&#34;nav-menu3__item active&#34;&gt;
    &lt;a href=&#34;&#34;&gt;第一个&lt;/a&gt;
  &lt;/li&gt;
  &lt;li class=&#34;nav-menu3__item&#34;&gt;
    &lt;a href=&#34;&#34;&gt;我第二&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改当前菜单项的顶部边框颜色&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.nav-menu__item.active a {border-top-color:red;}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ul class=&#34;nav-menu4 clearfix&#34;&gt;
  &lt;li class=&#34;nav-menu4__item nav-menu4__item-active&#34;&gt;
    &lt;a href=&#34;&#34;&gt;第一个&lt;/a&gt;
  &lt;/li&gt;
  &lt;li class=&#34;nav-menu4__item&#34;&gt;
    &lt;a href=&#34;&#34;&gt;我第二&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;于是子元素就伸出父元素顶部1像素。&lt;/p&gt;

&lt;p&gt;因为 IE6 会&lt;a href=&#34;http://www.positioniseverything.net/explorer/expandingboxbug.html&#34;&gt;自动扩展包含块的高度&lt;/a&gt;，所以上述方法如果要兼容 IE6,需要多做一个处理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.lt-ie7 .nav-menu__item{height:28px;overflow:hidden;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;.lt-ie7&lt;/code&gt; 的用法来自 &lt;a href=&#34;https://github.com/h5bp/html5-boilerplate/blob/master/index.html&#34;&gt;HTML5Boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;完整的代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul class=&amp;quot;nav-menu clearfix&amp;quot;&amp;gt;
    &amp;lt;li class=&amp;quot;nav-menu__item active&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;第一个&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li class=&amp;quot;nav-menu__item&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;我第二&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;style&amp;gt;
    .nav-menu{
        background:#0175cc;
        height:28px;
    }
    .nav-menu__item{
        float:left;
        font-size:14px;
        line-height:2;
        margin:0 10px;
        list-style:none;
        text-align:center;
    }
    .lt-ie7 .nav-menu__item{
        height: 28px;
        overflow: hidden;
    }
    .nav-menu__item a{
        float:left;
        background:#333;
        color:#fff;
        padding:0 10px;
        border-top:1px solid #fff;
        position: relative;
        top:-1px;
    }
    .nav-menu__item.active a{
        background:red;
        border-top-color: red;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;ul class=&#34;nav-menu-ie6 clearfix&#34;&gt;
  &lt;li class=&#34;nav-menu-ie6__item active&#34;&gt;
    &lt;a href=&#34;&#34;&gt;第一个&lt;/a&gt;
  &lt;/li&gt;
  &lt;li class=&#34;nav-menu-ie6__item&#34;&gt;
    &lt;a href=&#34;&#34;&gt;我第二&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;附：&lt;a href=&#34;http://www.zfanw.com/demo/ie6-expanding.html&#34; rel=&#34;nofollow&#34; title=&#34;IE6 自动扩展包含块高度&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IE6 下的浮动换行问题</title>
      <link>https://www.zfanw.com/blog/ie6-float-new-line.html</link>
      <pubDate>Sun, 12 May 2013 04:13:44 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/ie6-float-new-line.html</guid>
      <description>&lt;p&gt;如下 HTML 代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;普通的行内元素&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;普通的行内元素&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;fl-r&amp;quot;&amp;gt;普通的行内元素 - 右浮动&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CSS 样式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.fl-r{float:right;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在现代浏览器下，它会显示成一行，但 IE6 下，右浮动的元素显示在新一行，这样 &lt;code&gt;p&lt;/code&gt; 元素的高度就增加了，如下图：&lt;/p&gt;

&lt;div id=&#34;attachment_8911&#34; style=&#34;width: 563px&#34; class=&#34;wp-caption alignnone&#34;&gt;
  &lt;a href=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/05/ie6-float-new-line.jpg&#34;&gt;&lt;img src=&#34;http://www.zfanw.com/blog/wp-content/uploads/2013/05/ie6-float-new-line.jpg&#34; alt=&#34;ie6 浮动换行&#34; width=&#34;553&#34; height=&#34;55&#34; class=&#34;size-full wp-image-8911&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2013/05/ie6-float-new-line.jpg 553w, https://www.zfanw.com/blog/wp-content/uploads/2013/05/ie6-float-new-line-300x29.jpg 300w&#34; sizes=&#34;(max-width: 553px) 100vw, 553px&#34; /&gt;&lt;/a&gt;
  
  &lt;p class=&#34;wp-caption-text&#34;&gt;
    ie6 浮动换行
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;解决办法有多个，比如：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将前两个 a 元素左浮动&lt;/li&gt;
&lt;li&gt;将 p 元素相对定位 &lt;code&gt;position:relative&lt;/code&gt;，并且将最后一个 a 绝对定位&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;但这两种办法多少都有些过头，最简单的方法，将右浮动的元素提到最前：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;fl-r&amp;quot;&amp;gt;普通的行内元素 - 右浮动&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;普通的行内元素&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;普通的行内元素&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样 IE6 下它们就显示在同一行。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IE6 的固定定位</title>
      <link>https://www.zfanw.com/blog/ie6-position-fixed-hack.html</link>
      <pubDate>Tue, 26 Jul 2011 08:09:26 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/ie6-position-fixed-hack.html</guid>
      <description>

&lt;p&gt;IE6 不支持&lt;strong&gt;固定定位&lt;/strong&gt;，它会把 &lt;code&gt;position:fixed&lt;/code&gt; 理解成 &lt;code&gt;position:static&lt;/code&gt;，本该固定定位的块仍处于正常流中。&lt;/p&gt;

&lt;p&gt;解决办法是通过 &lt;code&gt;position:absolute&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; html.lt-ie7,
.lt-ie7 body{
    background-image:url(about:blank);
    background-attachment:fixed;
}
.lt-ie7 .fixMeTopPlease{
    position:absolute;
    left:0;
    top:expression(eval(document.documentElement.scrollTop));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样，我们就可以在 IE6 下模仿出固定定位效果。&lt;/p&gt;

&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/subtleGradient/158243&#34;&gt;ie6 fixed position gist&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>