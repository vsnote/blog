<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim Script on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/vim-script/</link>
    <description>Recent content in Vim Script on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 30 Sep 2012 13:09:14 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/vim-script/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Surround.vim</title>
      <link>https://www.zfanw.com/blog/surround-vim.html</link>
      <pubDate>Sun, 30 Sep 2012 13:09:14 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/surround-vim.html</guid>
      <description>&lt;div id=&#34;toc_container&#34; class=&#34;ml-l u-floatRight pure-u-1-1 pure-u-sm-2-5 toc_white no_bullets&#34;&gt;
  &lt;nav id=&#34;myaffix&#34;&gt;
  
  &lt;p class=&#34;toc-title&#34;&gt;
    目录
  &lt;/p&gt;
  
  &lt;ul class=&#34;toc-list nav&#34; role=&#34;menu&#34;&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;1&lt;/span&gt; 修改符号&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-2&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;2&lt;/span&gt; 删除符号&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-3&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;3&lt;/span&gt; 增加符号&lt;/a&gt;
    &lt;/li&gt;
    &lt;li class=&#34;toc-list__item&#34; role=&#34;menuitem&#34;&gt;
      &lt;a href=&#34;#i-4&#34;&gt;&lt;span class=&#34;toc_number toc_depth_1&#34;&gt;4&lt;/span&gt; 扩展阅读&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;&lt;/nav&gt;
&lt;/div&gt;

&lt;div class=&#34;&#34;&gt;
  &lt;p&gt;
    如下的一段代码，如果要删除得只剩下内容该如何：
  &lt;/p&gt;
  
  &lt;pre&gt;&lt;code&gt;&amp;lt;div class=&#34;vim&#34;&amp;gt;
    &amp;lt;p&amp;gt;
        &amp;lt;em&amp;gt;hi this is surround.vim from tim tpope&amp;lt;em&amp;gt;
    &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  
  &lt;p&gt;
    如果在 vim 里，可以这样操作：先定位到 &lt;div class=&amp;#8221;vim&amp;#8221;&gt; 行，然后按 &lt;kbd&gt;2dd&lt;/kbd&gt;，之后再定位到 &lt;/p&gt; 行，再 &lt;kbd&gt;2dd&lt;/kbd&gt;，然后剩下 em 一对标签。
  &lt;/p&gt;
  
  &lt;p&gt;
    这一对 em 看着不太好删。
  &lt;/p&gt;
  
  &lt;p&gt;
    这时，如果有安装 &lt;a href=&#34;https://github.com/tpope/vim-surround&#34;&gt;surround.vim&lt;/a&gt; 的话，只要按 &lt;kbd&gt;dst&lt;/kbd&gt; 就可以轻松删除一对 em 标签。
  &lt;/p&gt;
  
  &lt;p&gt;
    Surround.vim 是一个 Vim 插件，用于管理 &lt;strong&gt;() [] &lt;&gt; &amp;#8220;&amp;#8221; &amp;#8221; 及 html、xml 标签等成双成对出现的符号&lt;/strong&gt;。用它可以很方便地&lt;strong&gt;删除/修改/增加&lt;/strong&gt;这些符号，譬如上面所述的例子。
  &lt;/p&gt;
  
  &lt;p&gt;
    显然，上面的例子可以通过按三次的 dst 来删除，但那样显然不够高效，因为要按 9 次字母键，如果能 3dst 这样配合数字使用就很简单。又或者调用 Vim 的重复命令按键 &amp;#8220;.&amp;#8221; （点号）。但目前来看，这个插件并不支持配合数字的操作，可能是意义不大，毕竟所举的案例其实很偏门；另外，Vim 里点号所重复的命令只是重复最后一次原生命令，而无法重复映射过的“整”命令。
  &lt;/p&gt;
  
  &lt;p&gt;
    于是，Tim Tpope 还写了一个 &lt;a href=&#34;https://github.com/tpope/vim-repeat&#34;&gt;repeat.vim 的插件&lt;/a&gt;，解决点号重复命令的问题。
  &lt;/p&gt;
  
  &lt;p&gt;
    于是上述案例的解决办法变成，先按一次 &lt;kbd&gt;dst&lt;/kbd&gt;，然后两次点号，这回按了 5 次按键。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i&#34;&gt;修改符号&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi&#34; href=&#34;#i&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    以下例子中 * 表示光标位置。
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;#8220;hello w*orld&amp;#8221; &amp;rarr; &lt;kbd&gt;cs&#34;&#39;&lt;/kbd&gt; &amp;rarr; &amp;#8216;hello world&amp;#8217;
  &lt;/p&gt;
  
  &lt;p&gt;
    可以把 cs 理解为 change surround，把 &amp;#8221; 修改为 ‘。
  &lt;/p&gt;
  
  &lt;p&gt;
    ‘hello wor*ld’ &amp;rarr; &lt;kbd&gt;cs‘&lt;q&gt;&lt;/kbd&gt; &amp;rarr; &lt;q&gt;hello world&lt;/q&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;q&gt;hello *world&lt;/q&gt; &amp;rarr; &lt;kbd&gt;cst&#34;&lt;/kbd&gt; &amp;rarr; &amp;#8220;hello world&amp;#8221;
  &lt;/p&gt;
  
  &lt;p&gt;
    cst 表示 change surround tag，t 表示 xml/html 成对出现的标签。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-2&#34;&gt;删除符号&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-2&#34; href=&#34;#i-2&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    类于修改符号，删除只是换个按键，把 c 换成 d。则要删除包围的双引号可以用 ds&amp;#8221; &amp;#8211; delete surround &amp;#8220;，要删除标签对，则用 &lt;kbd&gt;dst&lt;/kbd&gt; &amp;#8211; delete surround tag。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-3&#34;&gt;增加符号&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-3&#34; href=&#34;#i-3&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;p&gt;
    如果要增加符号，比如字符串 hello，要用双引号包围，则可以按 &lt;kbd&gt;ysiw&#34;&lt;/kbd&gt;，按 surround.vim 帮助说明，可以把 y 记忆成 you，于是 &lt;kbd&gt;ysiw&#34;&lt;/kbd&gt; 意指 you surround inner word &amp;#8220;，同理，要用标签对的话则是按 &lt;kbd&gt;ysiw&lt;p&gt;&lt;/kbd&gt;，另外，surround.vim 还提供包围整行的方法，&lt;kbd&gt;yss&#34;&lt;/kbd&gt; &amp;#8211; you surround sentence &amp;#8220;；至于在增加 [] () &lt;&gt; 这样的符号时，有一点小小区别，比如 hello 这个单词，&lt;kbd&gt;ysiw[&lt;/kbd&gt; 会生成 [ hello ]，ysiw] 会成生 [hello]，hello 前后少一个空格，删除、修改亦然。
  &lt;/p&gt;
  
  &lt;p&gt;
    如果要包围单行里的两个单词甚至更多，则可以使用可视模式，先进入 vim 的可视化模式选中要包围的单词，然后按 &lt;kbd&gt;S&#34;&lt;/kbd&gt; 就可以把这些单词用双引号包围。
  &lt;/p&gt;
  
  &lt;p&gt;
    非常便利。
  &lt;/p&gt;
  
  &lt;h2 class=&#34;storycontent-h2&#34;&gt;
    &lt;span id=&#34;i-4&#34;&gt;扩展阅读&lt;/span&gt;&lt;a title=&#34;标题链接地址&#34; class=&#34;u-floatRight hidden&#34; id=&#34;heyi-4&#34; href=&#34;#i-4&#34;&gt;&lt;span class=&#34;&#34; aria-hidden=&#34;true&#34;&gt;#&lt;/span&gt;&lt;/a&gt;
  &lt;/h2&gt;
  
  &lt;ol&gt;
    &lt;li&gt;
      &lt;a href=&#34;http://www.zfanw.com/blog/vundle-vim-plugin-management.html&#34;&gt;vim 插件安装的便利方法&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&#34;https://github.com/tpope&#34;&gt;Tim Tpope 的各种其他 vim 插件&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Vundle 管理 Vim 插件</title>
      <link>https://www.zfanw.com/blog/vundle-vim-plugin-management.html</link>
      <pubDate>Sun, 05 Aug 2012 04:35:20 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/vundle-vim-plugin-management.html</guid>
      <description>

&lt;p&gt;如果用 &lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;pathogen&lt;/a&gt; 管理 vim 插件，bundle 文件夹下 vim 插件的更新很麻烦，你需要针对每个插件分别升级。如果你还有不同电脑，那么不同电脑上 vim 插件保持一致也成问题。&lt;/p&gt;

&lt;p&gt;Vundle 可以解决上述问题。&lt;/p&gt;

&lt;p&gt;首先，你的操作系统需要事先安装 git，然后利用 &lt;code&gt;git clone&lt;/code&gt; 命令从 github 上下载 Vundle：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开 .vimrc 配置文件（Windows 系统上为 _vimrc)，配置要安装的 vim 插件：&lt;/p&gt;

&lt;pre lang=&#34;vim&#34;&gt;&lt;code&gt;
 set nocompatible               &#34; 设置 vim 为不兼容 vi 模式
 filetype off                   &#34; 必须的

 set rtp+=~/.vim/bundle/vundle/
 &#34;Windows系统下上一语句修改为
 &#34;set rtp+=$VIM/vimfiles/bundle/vundle/
 call vundle#rc()

 &#34; 让 Vundle 管理 Vundle
 &#34; 此条必须有
 Bundle &#39;gmarik/vundle&#39;

 &#34; 比如我的 vim 插件
 &#34;
 &#34; 代码源在 github 上的
 Bundle &#39;mattn/zencoding-vim&#39;
 Bundle &#39;Lokaltog/vim-powerline&#39;
 Bundle &#39;kien/ctrlp.vim&#39;

 &#34; 代码存放在 vim script 上
 Bundle &#39;FuzzyFinder&#39;

 &#34; 代码存放在其他地方
 Bundle &#39;git://git.wincent.com/command-t.git&#39;
 &#34; ...

 filetype plugin indent on     &#34; 必须有
 &#34;
 &#34; Brief help
 &#34; :BundleList          - list configured bundles
 &#34; :BundleInstall(!)    - install(update) bundles
 &#34; :BundleSearch(!) foo - search(or refresh cache first) for foo
 &#34; :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
 &#34;
 &#34; see :h vundle for more details or wiki for FAQ
 &#34; NOTE: comments after Bundle command are not allowed..
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;接下来，vim 中运行命令 &lt;code&gt;:BundleInstall&lt;/code&gt; 就可以自动安装上述配置文件中的 vim 插件，而如果要更新插件，运行命令 &lt;code&gt;:BundleInstall!&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果要删除插件，则从 .vimrc 文件中删除或注释掉相应行，然后运行 &lt;code&gt;:BundleClean&lt;/code&gt; 即可。&lt;/p&gt;

&lt;p&gt;之后，只要在不同电脑上同步 .vimrc 文件就可以保证不同电脑上的 vim 插件一致。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.charlietanksley.net/philtex/sane-vim-plugin-management/&#34;&gt;http://www.charlietanksley.net/philtex/sane-vim-plugin-management/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gmarik/vundle&#34;&gt;https://github.com/gmarik/vundle&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>