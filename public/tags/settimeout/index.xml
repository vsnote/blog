<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Settimeout on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/settimeout/</link>
    <description>Recent content in Settimeout on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 06 May 2015 04:15:33 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/settimeout/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>JavaScript setTimeout 居然立即执行了</title>
      <link>https://www.zfanw.com/blog/javascript-settimeout-fire-immediately.html</link>
      <pubDate>Wed, 06 May 2015 04:15:33 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/javascript-settimeout-fire-immediately.html</guid>
      <description>&lt;p&gt;在我的经历里，有过类似以下的一段代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setTimeout(function() { console.log(&#39;sam chen&#39;); }, 2591700000);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ooooooops，立即执行了。而不是我们所预想的，会在至少 2591700000ms 后触发。&lt;/p&gt;

&lt;p&gt;原因是这样的&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:15918-1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:15918-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Timeout values too big to fit into a signed 32-bit integer may cause overflow in FF, Safari, and Chrome, resulting in the timeout being scheduled immediately. It makes more sense simply not to schedule these timeouts, since 24.8 days is beyond a reasonable expectation for the browser to stay open.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;setTimeout&lt;/code&gt; 的第二个参数 timeout 的最大值是 2147483647&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:15918-2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:15918-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，我们的设定值超过它，回调函数就会立即执行。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:15918-1&#34;&gt;&lt;a href=&#34;https://code.google.com/p/closure-library/source/browse/closure/goog/timer/timer.js?r=7205c0d2f9ef6e079ba626e3c83d93dddf65de67#79&#34;&gt;closure timer.js &amp;#8211; code.google.com&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:15918-1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:15918-2&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout#Minimum.2Fmaximum_delay_and_timeout_nesting&#34;&gt;最大/最小延迟值 &amp;#8211; MDN&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:15918-2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>你不知道 setTimeout 是怎么回事</title>
      <link>https://www.zfanw.com/blog/you-dont-know-settimeout-in-js.html</link>
      <pubDate>Mon, 04 May 2015 11:54:52 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/you-dont-know-settimeout-in-js.html</guid>
      <description>&lt;p&gt;在我查找 JavaScript setTimeout 相关资料时，看到这一段测试代码&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:15831-1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:15831-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setTimeout(function(){console.log(&#39;a&#39;);},5);
var then = (new Date()).getTime(), now;
do { now = (new Date()).getTime(); } while (now &amp;lt; (then + 5));
setTimeout(function(){console.log(&#39;b&#39;);},0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果照 JavaScript 单线程的思路看，则 log 的顺序应该是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;a&lt;/li&gt;
&lt;li&gt;b&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在 Safari 8.0.5（Mac） 与 Google Chrome 42.0.2311.135 (64-bit)（Mac）上确实如此。&lt;/p&gt;

&lt;p&gt;但让人吃惊的是，Firefox 37.0.2 上 log 出的顺序却是相反的：&lt;/p&gt;

&lt;p&gt;[resp_image id=&amp;#8217;15892&amp;#8242; caption=&amp;#8221; ]&lt;/p&gt;

&lt;p&gt;测试过 IE11 上的表现是跟 Firefox 一样的。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:15831-1&#34;&gt;&lt;a href=&#34;https://mail.mozilla.org/pipermail/es-discuss/2011-March/013276.html&#34;&gt;Bringing setTimeout to ECMAScript&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:15831-1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>