<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>可用性 on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/%E5%8F%AF%E7%94%A8%E6%80%A7/</link>
    <description>Recent content in 可用性 on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 15 Sep 2015 23:22:56 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/%E5%8F%AF%E7%94%A8%E6%80%A7/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>按需加载</title>
      <link>https://www.zfanw.com/blog/require-when-you-need.html</link>
      <pubDate>Tue, 15 Sep 2015 23:22:56 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/require-when-you-need.html</guid>
      <description>&lt;p&gt;​如果我说“按需加载”是个伪特性，一定有人对我竖中指表示不服。&lt;/p&gt;

&lt;p&gt;那么“按需加载”是什么？&lt;/p&gt;

&lt;p&gt;​随着前端上的 JavaScript 文件越来越大，一次性下载并执行还没用到的代码，​这是浪费用户的时间。恰逢 JavaScript 模块化逐渐成熟，于是就可以考虑分割模块，某些尚未用到的模块，先不加载，等到用户要使用该功能时，才加载、执行。&lt;/p&gt;

&lt;p&gt;又或者说图片，如果页面上图片较多，一次性连着不在 viewport 的图片全然请求回来，必要性不大，于是可以考虑不在 viewport 内的先不请求，等进入了 viewport 再请求。&lt;/p&gt;

&lt;p&gt;我曾经提问过：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;一次性等待 10 秒&lt;/li&gt;
&lt;li&gt;每次都要等 0.5 ~ 1 秒&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;你选哪个？&lt;/p&gt;

&lt;p&gt;很多人选 2，我问为什么，他们说，如果一次要等那么久时间，用户早跑了。&lt;/p&gt;

&lt;p&gt;这个理由并不充分。&lt;/p&gt;

&lt;p&gt;首先，许多产品、尤其是后台管理类的产品，等 10 秒用户也不会跑。这不是娱乐类的产品，可有可无。&lt;/p&gt;

&lt;p&gt;其次，人的注意力有限，除了电话、短信、消息、广告弹出框等等意外以外，每次还要被“loading”打断的话，这个产品，我的感受只会是，去你妈的，按需加载。&lt;/p&gt;

&lt;p&gt;我宁愿一次性等 10 秒，然后赶快把任务做完，关掉这个网页去睡觉。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>图片为什么要加 alt</title>
      <link>https://www.zfanw.com/blog/why-alt-for-img-element.html</link>
      <pubDate>Mon, 14 Sep 2015 23:48:53 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/why-alt-for-img-element.html</guid>
      <description>&lt;p&gt;如果你觉得苹果作为世界上顶尖的设计公司，用户的可访问性应该非常棒，那么你高估它了。&lt;/p&gt;

&lt;p&gt;这是我最近在 apple store 付款时碰上的，&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img.png&#34; rel=&#34;attachment wp-att-17308&#34;&gt;&lt;img src=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img.png&#34; alt=&#34;不加 alt 的图片&#34; width=&#34;1024&#34; class=&#34;alignnone size-full wp-image-17308&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img.png 1024w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img-300x116.png 300w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img-100x39.png 100w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img-768x296.png 768w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/no-alt-img-520x201.png 520w&#34; sizes=&#34;(max-width: 1024px) 100vw, 1024px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果每张图片都有添加 alt 属性，我就不必打开浏览器的开发者工具查看哪个是哪个了，而对普通用户来说，除了刷新页面，恐怕没有其它选择。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Placeholder 的可用性</title>
      <link>https://www.zfanw.com/blog/placeholder-harmful.html</link>
      <pubDate>Mon, 14 Sep 2015 23:42:34 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/placeholder-harmful.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.nngroup.com/articles/form-design-placeholders/&#34;&gt;nngroup 有一篇文章&lt;/a&gt;说到表单中使用 placeholder 对可用性的损害非常大。&lt;/p&gt;

&lt;p&gt;我最近就在 apple store 上碰到了，&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input.png&#34; rel=&#34;attachment wp-att-17299&#34;&gt;&lt;img src=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input.png&#34; alt=&#34;输入无效&#34; width=&#34;580&#34; class=&#34;alignnone size-full wp-image-17299&#34; srcset=&#34;https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input.png 580w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input-300x101.png 300w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input-100x34.png 100w, https://www.zfanw.com/blog/wp-content/uploads/2015/09/invalid-input-520x176.png 520w&#34; sizes=&#34;(max-width: 580px) 100vw, 580px&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为什么会限制用户输入的地址长度？让人摸不着头脑。&lt;/p&gt;

&lt;p&gt;后来清了该输入框，才发现 placeholder 里写着要填“单元号、房号”之类的。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>