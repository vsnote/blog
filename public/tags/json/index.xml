<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/json/</link>
    <description>Recent content in Json on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 24 Dec 2013 12:24:54 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>JSON 解析</title>
      <link>https://www.zfanw.com/blog/json-parse.html</link>
      <pubDate>Tue, 24 Dec 2013 12:24:54 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/json-parse.html</guid>
      <description>&lt;p&gt;Ajax 请求返回的 JSON 数据，通过 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&#34;&gt;JSON.parse&lt;/a&gt; 或 jQuery 提供的 &lt;a href=&#34;http://api.jquery.com/jQuery.parseJSON/&#34;&gt;parseJSON&lt;/a&gt; 解析后，就可以当成 JavaScript 对象处理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$.get(&#39;http://www.example.com/json&#39;, function(data) {
    var response = JSON.parse(data);
    console.log(response.result);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，事情要比上面这种说法复杂一些，这是由 HTTP 响应头的 Content-Type 值决定的。&lt;/p&gt;

&lt;p&gt;比如我们的响应头里 Content-Type 如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Content-Type: text/plain; charset=utf-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;那么，JSON.parse 或 jQuery.parseJSON 都可以并且应该使用，因为返回的是一个 JSON 字符串。&lt;/p&gt;

&lt;p&gt;但当 Content-Type 是 &lt;code&gt;application/json;charset=utf-8&lt;/code&gt; 时，情况就不一样了，因为返回值本身就是 JavaScript 对象，可以直接访问，这时如果使用 JSON.parse 解析反而是错误的。&lt;/p&gt;

&lt;p&gt;还有一种常见的情况，返回的是 JSON 字符串，但 Content-Type 却是 text/html，需要预先使用 &lt;code&gt;eval&lt;/code&gt; 将其转化为 JavaScript 对象：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var response = eval(&amp;quot;(&amp;quot; + data + &amp;quot;)&amp;quot;);
console.log(response.result);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>