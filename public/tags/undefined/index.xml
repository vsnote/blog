<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Undefined on 陈三</title>
    <link>https://www.zfanw.com/blog/tags/undefined/</link>
    <description>Recent content in Undefined on 陈三</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 02 Jan 2015 00:21:00 +0000</lastBuildDate>
    <atom:link href="https://www.zfanw.com/blog/tags/undefined/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>JavaScript 里判断 null 与 undefined</title>
      <link>https://www.zfanw.com/blog/javascript-reflect-null-undefined.html</link>
      <pubDate>Fri, 02 Jan 2015 00:21:00 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/javascript-reflect-null-undefined.html</guid>
      <description>&lt;p&gt;这里所说的判断，是指判断变量的值是否就是 null 或 undefined。&lt;/p&gt;

&lt;p&gt;如&lt;a href=&#34;http://www.zfanw.com/blog/javascript-difference-between-null-undefined.html&#34;&gt;区别 null 与 undefined 一文&lt;/a&gt;中所讲的，null 与 undefined 是它们所属类型的唯一一个值。所以判断方法非常方便，只要我们使用恒等比较（===）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a 即 undefined&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a;
a === undefined;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的代码将输出 &lt;code&gt;true&lt;/code&gt;，即 a 为 &lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a 为 null&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a = null;
a === null;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的代码将输出 &lt;code&gt;true&lt;/code&gt;，即 a 是 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然，恒等比较有一个前提，就是变量已经存在，如果变量尚未声明，引用未声明的变量会抛出错误。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;i === undefined;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上代码执行后会抛出错误：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ReferenceError: i is not defined&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以使用 &lt;code&gt;typeof&lt;/code&gt; 来检查变量是否为 undefined 会更安全：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;typeof i === &#39;undefined&#39;; // 如果 i 未声明，或 i 已声明但未赋值，结果为 true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但 &lt;code&gt;typeof&lt;/code&gt; 检查变量值是否为 null 时，输出结果是 &amp;#8220;object&amp;#8221;，这个结论并不准确。以下方法才是对的且安全的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a = null;
Object.prototype.toString.call(a).slice(8, -1);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;它会输出 &lt;code&gt;Null&lt;/code&gt;，表示变量 a 的值是 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript 里区别 null 与 undefined</title>
      <link>https://www.zfanw.com/blog/javascript-difference-between-null-undefined.html</link>
      <pubDate>Thu, 01 Jan 2015 13:51:45 +0000</pubDate>
      
      <guid>https://www.zfanw.com/blog/javascript-difference-between-null-undefined.html</guid>
      <description>&lt;p&gt;&lt;code&gt;null&lt;/code&gt; 与 &lt;code&gt;undefined&lt;/code&gt; 是 JavaScript 的两个类型，类型的值如下：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;td&gt;只有一个值 null&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;td&gt;只有一个值 undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;null&lt;/code&gt; 表示变量取值为 &lt;code&gt;null&lt;/code&gt; &amp;#8211; 换句话说，取值即不是字符串也不是数字也不是真假值也不是对象。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt; 表示变量已经声明，但未赋值，或赋值 &lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var a; // 变量已声明，未赋值
var b = undefined; // 变量已声明，则赋值 undefined
a === b;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;a === b&lt;/code&gt; 的输出结果是 &lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;所以我们可以简单地区别它们：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;undefined 表示没找到变量的值 &amp;#8211; 找不到值&lt;/li&gt;
&lt;li&gt;null 表示找到变量的值是 &lt;code&gt;null&lt;/code&gt; &amp;#8211; 找得到值&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>